# Copyright 2020 The Dawn Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../scripts/dawn_overrides_with_defaults.gni")

group("dawn_samples") {
  deps = [
    ":Add",
    ":AveragePool2d",
    ":Conv2d",
    ":LeNet",
    ":MatMul",
    ":MaxPool2d",
    ":Mul",
    ":Relu",
    ":Reshape",
    ":Softmax",
    ":Transpose",
  ]
}

# Static library to contain code and dependencies common to all samples
static_library("dawn_sample_utils") {
  sources = [
    "SampleUtils.cpp",
    "SampleUtils.h",
  ]

  # Export all of these as public deps so that `gn check` allows includes
  public_deps = [
    "${dawn_root}/src/common",
    "${dawn_root}/src/dawn:dawn_proc",
    "${dawn_root}/src/dawn:dawncpp",
    "${dawn_root}/src/dawn_native",
  ]
  public_configs = [ "${dawn_root}/src/common:dawn_internal" ]
}

# Template for samples to avoid listing dawn_sample_utils as a dep every time
template("dawn_sample") {
  executable(target_name) {
    deps = [ ":dawn_sample_utils" ]
    forward_variables_from(invoker, "*", [ "deps" ])

    if (defined(invoker.deps)) {
      deps += invoker.deps
    }
  }
}

dawn_sample("MatMul") {
  sources = [ "MatMul.cpp" ]
}

dawn_sample("LeNet") {
  sources = [ "LeNet.cpp" ]
}

dawn_sample("Add") {
  sources = [ "Add.cpp" ]
}

dawn_sample("Mul") {
  sources = [ "Mul.cpp" ]
}

dawn_sample("Conv2d") {
  sources = [ "Conv2d.cpp" ]
}

dawn_sample("AveragePool2d") {
  sources = [ "AveragePool2d.cpp" ]
}

dawn_sample("MaxPool2d") {
  sources = [ "MaxPool2d.cpp" ]
}

dawn_sample("Relu") {
  sources = [ "Relu.cpp" ]
}

dawn_sample("Reshape") {
  sources = [ "Reshape.cpp" ]
}

dawn_sample("Softmax") {
  sources = [ "Softmax.cpp" ]
}

dawn_sample("Transpose") {
  sources = [ "Transpose.cpp" ]
}
