# Copyright 2020 The Dawn Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//third_party/dawn/scripts/dawn_overrides_with_defaults.gni")

group("webnn_samples") {
  deps = [ ":LeNet" ]
}

# Static library to contain code and dependencies common to all samples
static_library("webnn_sample_utils") {
  sources = [
    "SampleUtils.cpp",
    "SampleUtils.h",
  ]

  # Export all of these as public deps so that `gn check` allows includes
  public_deps = [
    "${webnn_root}/src/common",
    "${webnn_root}/src/webnn:webnn_proc",
    "${webnn_root}/src/webnn:webnncpp",
    "${webnn_root}/src/webnn_native",
  ]
  public_configs = [ "${webnn_root}/src/common:dawn_internal" ]
}

# Template for samples to avoid listing webnn_sample_utils as a dep every time
template("webnn_sample") {
  executable(target_name) {
    deps = [ ":webnn_sample_utils" ]
    forward_variables_from(invoker, "*", [ "deps" ])

    if (defined(invoker.deps)) {
      deps += invoker.deps
    }
  }
}

webnn_sample("LeNet") {
  sources = [
    "LeNet/LeNet.cpp",
    "LeNet/LeNet.h",
    "LeNet/Main.cpp",
    "LeNet/MnistUbyte.cpp",
    "LeNet/MnistUbyte.h",
  ]
}
